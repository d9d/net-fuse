syntax = "proto3";

import "empty.proto";
import "timestamp.proto";

service NetFuse {
  rpc version  (Empty)            returns (versionResponse);

  // rpc chmod    (pathModeRequest)  returns (posixResponse);
  // rpc chown    (chownRequest)     returns (posixResponse);
  rpc create   (pathModeRequest)  returns (posixResponse);
  rpc getattr  (pathRequest)      returns (statResponse);
  rpc link     (twoPathsRequest)  returns (posixResponse);
  rpc mkdir    (pathModeRequest)  returns (posixResponse);
  rpc read     (readRequest)      returns (readResponse);
  rpc readdir  (pathRequest)      returns (readdirResponse);
  rpc readlink (pathRequest)      returns (linkResponse);
  rpc rename   (twoPathsRequest)  returns (posixResponse);
  rpc rmdir    (pathRequest)      returns (posixResponse);
  // rpc setattr  (setattrRequest)   returns (posixResponse);
  rpc statfs   (Empty)            returns (statfsResponse);
  rpc symlink  (twoPathsRequest)  returns (posixResponse);
  rpc unlink   (pathRequest)      returns (posixResponse);
  rpc write    (writeRequest)     returns (posixResponse);
}

// ************
// * REQUESTS *
// ************
message pathRequest {
  string path = 1;
}

message pathModeRequest {
  string path = 1;
  uint32 mode = 2;
}

message chownRequest {
  string path  = 1;
  string owner = 2;
  string group = 3;
}

message openRequest {
  string path  = 1;
  string flags = 2;
  uint32 mode  = 3;
}

message readRequest {
  string path     = 1;
  uint32 position = 2;
  uint32 length   = 3;
}

message writeRequest {
  string path     = 1;
  uint32 position = 2;

  // bytes are last in case we're streaming
  bytes  bytes    = 15;
}

message twoPathsRequest {
  string path1 = 1;
  string path2 = 2;
}

message linkRequest {
  string sourcePath = 1;
  string targetPath = 2;
}

message truncateRequest {
  string path = 1;
  uint32 size = 2;
}

message setxattrRequest {
  string path     = 1;
  string name     = 2;
  string value    = 3;
  uint32 size     = 4;
  uint32 position = 5;
  uint32 flags    = 6;
  uint32 options  = 7;
}


// *************
// * RESPONSES *
// *************
message posixResponse {
  uint32 posix   = 1;
  string message = 2;
}

message versionResponse {
  posixResponse posix = 1;
  uint32        major = 2;
  uint32        minor = 3;
  uint32        patch = 4;
}

message statResponse {
  posixResponse posix     = 1;
  uint32        dev       = 2;
  uint32        ino       = 3;
  uint32        mode      = 4;
  uint32        nlink     = 5;
  uint32        uid       = 6;
  uint32        gid       = 7;
  uint32        rdev      = 8;
  uint32        size      = 9;
  uint32        blksize   = 10;
  uint32        blocks    = 11;
  Timestamp     atime     = 12;
  Timestamp     mtime     = 13;
  Timestamp     ctime     = 14;
  Timestamp     birthtime = 15;
}

message statfsResponse {
  posixResponse posix   = 1;
  uint32        bsize   = 2;
  uint32        frsize  = 3;
  uint32        blocks  = 4;
  uint32        bfree   = 5;
  uint32        bavail  = 6;
  uint32        files   = 7;
  uint32        ffree   = 8;
  uint32        favail  = 9;
  uint32        fsid    = 10;
  uint32        flag    = 11;
  uint32        namemax = 12;
}

message readdirResponse {
 posixResponse posix = 1;

 repeated string names = 2;
}

message linkResponse {
  posixResponse posix = 1;
  string        link  = 2;
}

message readResponse {
  posixResponse posix = 1;
  bytes         bytes = 2;
}
